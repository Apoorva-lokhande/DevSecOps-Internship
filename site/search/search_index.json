{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Introduction"},{"location":"contents/","text":"Table of contents Introduction setting-up-VM setting-up-jenkins setting-up-mkdocs","title":"Contents"},{"location":"contents/#table-of-contents","text":"Introduction setting-up-VM setting-up-jenkins setting-up-mkdocs","title":"Table of contents"},{"location":"setting-up-VM/","text":"What is Virtual Machine? For understanding Virtual machine (VM) we will have to understand what Virtualization is. Virtualization is a software based or virtual version of something, that be compute, storage, networking, servers or applications. And Hypervisor makes Virtualization possible. Hypervisor is a piece of software that runs above host or server. There are 2 types of hypervisors: Type 1: It is installed directly on top of physical server. Type 2: Here there is a layer of Host operating system (OS) between the hardware and Hypervisor (as we are using here). A VM is an OS or application environment that is installed on software, which imitates dedicated physical server. A VM provides an isolated environment for running its own OS and applications independently from the underlying host system or from other VMs on that host. The VM's OS is commonly referred to as the guest OS, and it can be the same as or different from the host OS or the other VMs. Setting up VM Here I will be setting up two VMs: For Jenkins Deployment. For suiteCRM server.` In virtual Box Click NEW icon to create a new machine Name and operating system Name : Jenkins-deploy Type : Linux Version : Ubuntu (64-bit) Memory size image Select 2000 MB and click on create Hard disk Select a virtual hard disk now and Create and Hard disk file type will open in that select VDI (VirtualBox Disk Image) and NEXT . In storage on physical hard disk select Dynamically allocated File location and size will open hit Create and is done. Download server image 18.04 Downloaded the server image Ubuntu 18.04 on VirtualBox as it is an LTS version which is a desirable feature for a CI pipeline. I followed the official link to download the 64-bit PC(AMD64) desktop image In VM box I selected Jenkins-deploy to install the server and then clicked on start Then the Select start-up disk window opened and I clicked on the folder which gave a new screen Optical Disk Selector. I selected the server image and clicked on Choose after that click on start Now Jenkin VM starts running! Language selection Select the language English and click on done Keyboard configuration By default, English is selected for Layout and variant, pressed Done . Network connections I kept it as default and selected Done . Configure proxy Configure ubuntu archive mirror I kept it as default and pressed Done for both Configure proxy and configure ubuntu archive mirror Storage configuration I did not make changes in the storage configuration I kept it as default and pressed Done . I kept this too as default and hit Done . Profile setup I provided all the details and pressed Done . SSH Setup In order to install the OpenSSH server I pressed Space button to select the Install OpenSSH server option. I selected the install openSSH server because by default ubuntu did not have openSSH installed, and then I kept Import SSH identity as default and pressed Done . Featured Server Snaps Selected the snaps which are useful in a server environment, once selected pressed Done . Installation complete Installation complete window appeared, I waited until the Reboot button appeared on this window. Later, pressed reboot . And the installation of Ubuntu 18.04 is completed! Repeat the same process in order to create another VM for suiteCRM deployment where I have specified the server name as suitecrm-deploy .","title":"Setting up VM"},{"location":"setting-up-VM/#what-is-virtual-machine","text":"For understanding Virtual machine (VM) we will have to understand what Virtualization is. Virtualization is a software based or virtual version of something, that be compute, storage, networking, servers or applications. And Hypervisor makes Virtualization possible. Hypervisor is a piece of software that runs above host or server. There are 2 types of hypervisors: Type 1: It is installed directly on top of physical server. Type 2: Here there is a layer of Host operating system (OS) between the hardware and Hypervisor (as we are using here). A VM is an OS or application environment that is installed on software, which imitates dedicated physical server. A VM provides an isolated environment for running its own OS and applications independently from the underlying host system or from other VMs on that host. The VM's OS is commonly referred to as the guest OS, and it can be the same as or different from the host OS or the other VMs.","title":"What is Virtual Machine?"},{"location":"setting-up-VM/#setting-up-vm","text":"Here I will be setting up two VMs: For Jenkins Deployment. For suiteCRM server.` In virtual Box Click NEW icon to create a new machine","title":"Setting up VM"},{"location":"setting-up-VM/#name-and-operating-system","text":"Name : Jenkins-deploy Type : Linux Version : Ubuntu (64-bit)","title":"Name and operating system"},{"location":"setting-up-VM/#memory-size","text":"image Select 2000 MB and click on create","title":"Memory size"},{"location":"setting-up-VM/#hard-disk","text":"Select a virtual hard disk now and Create and Hard disk file type will open in that select VDI (VirtualBox Disk Image) and NEXT . In storage on physical hard disk select Dynamically allocated File location and size will open hit Create and is done.","title":"Hard disk"},{"location":"setting-up-VM/#download-server-image-1804","text":"Downloaded the server image Ubuntu 18.04 on VirtualBox as it is an LTS version which is a desirable feature for a CI pipeline. I followed the official link to download the 64-bit PC(AMD64) desktop image In VM box I selected Jenkins-deploy to install the server and then clicked on start Then the Select start-up disk window opened and I clicked on the folder which gave a new screen Optical Disk Selector. I selected the server image and clicked on Choose after that click on start Now Jenkin VM starts running!","title":"Download server image 18.04"},{"location":"setting-up-VM/#language-selection","text":"Select the language English and click on done","title":"Language selection"},{"location":"setting-up-VM/#keyboard-configuration","text":"By default, English is selected for Layout and variant, pressed Done .","title":"Keyboard configuration"},{"location":"setting-up-VM/#network-connections","text":"I kept it as default and selected Done .","title":"Network connections"},{"location":"setting-up-VM/#configure-proxy","text":"","title":"Configure proxy"},{"location":"setting-up-VM/#configure-ubuntu-archive-mirror","text":"I kept it as default and pressed Done for both Configure proxy and configure ubuntu archive mirror","title":"Configure ubuntu archive mirror"},{"location":"setting-up-VM/#storage-configuration","text":"I did not make changes in the storage configuration I kept it as default and pressed Done . I kept this too as default and hit Done .","title":"Storage configuration"},{"location":"setting-up-VM/#profile-setup","text":"I provided all the details and pressed Done .","title":"Profile setup"},{"location":"setting-up-VM/#ssh-setup","text":"In order to install the OpenSSH server I pressed Space button to select the Install OpenSSH server option. I selected the install openSSH server because by default ubuntu did not have openSSH installed, and then I kept Import SSH identity as default and pressed Done .","title":"SSH Setup"},{"location":"setting-up-VM/#featured-server-snaps","text":"Selected the snaps which are useful in a server environment, once selected pressed Done .","title":"Featured Server Snaps"},{"location":"setting-up-VM/#installation-complete","text":"Installation complete window appeared, I waited until the Reboot button appeared on this window. Later, pressed reboot . And the installation of Ubuntu 18.04 is completed! Repeat the same process in order to create another VM for suiteCRM deployment where I have specified the server name as suitecrm-deploy .","title":"Installation complete"},{"location":"setting-up-jenkins/","text":"Installation of Jenkins What is Jenkins? Jenkins is a self-contained, open-source automation server which can be used to automate all sorts of tasks related to building, testing, and delivering or deploying software. Prerequisite I have setup ubuntu 18.04 VM for installing Jenkins from Documentation . I have installed java 8 OpenJDK and JRE (Java Development Kit and Java Runtime Environment) which is used to develop and run the software, I have used this Link to download the same. Installation steps for Jenkins Add the repository key to the terminal: `wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add - ` The system will return OK Next, add the Debian package repository address: sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > \\ /etc/apt/sources.list.d/jenkins.list sudo apt update Now install Jenkins and it\u2019s dependencies: sudo apt install jenkins Starting Jenkins The systemctl command is used to manage \"systemd\" services and service manager: sudo systemctl start jenkins Check the status of Jenkins service using the below command: sudo systemctl status jenkins If the Jenkins has installed successfully, then the output will show as Active: active(excited) . To reach it from a web browser I will adjust the firewall rules to complete the initial setup. Set-up a Firewall with UFW Firewall is a software controlling incoming and outgoing network traffic. Firewall is able to manage traffic by monitoring network ports. By default, Jenkins runs on port 8080. Opening using ufw(uncomplicated firewall): sudo ufw allow 8080 To check the status of the ufw: sudo ufw status If the status shows \"Inactive\". Then enable using following command To configure your server to allow incoming SSH connections, you can use this command: sudo ufw allow ssh To enable UFW, use this command: sudo ufw enable Setting up Jenkins To find your server's name or domain name enter the following command in your terminal: ifconfig Using the server's name or domain name as shown in the following command, entered that into a browser which in turn gave the Unlock Jenkins window. http://your_server_name_or_domain:8080 Using that server name The Unlock Jenkins window shows where the admin password is stored. In the terminal I will use the cat command to display the password: sudo cat /var/lib/jenkins/secrets/initialAdminPassword The 32-character alphanumeric password is displayed in the terminal, paste it onto Administrator password field, and then click continue . Customize Jenkins In the Customize Jenkins select \"install suggested plugins\" which will start installation process directly and press continue . Create Admin User Add the required credentials, click on save and continue as admin. The \"Instance configuration\" page will be displayed which will ask to confirm the preferred URL for Jenkins instance, click on save and finish . Installation Starts Once the process is over click on Reboot which will restart the Jenkins. Now, Jenkins is installed!","title":"Setting up Jenkins"},{"location":"setting-up-jenkins/#installation-of-jenkins","text":"","title":"Installation of Jenkins"},{"location":"setting-up-jenkins/#what-is-jenkins","text":"Jenkins is a self-contained, open-source automation server which can be used to automate all sorts of tasks related to building, testing, and delivering or deploying software.","title":"What is Jenkins?"},{"location":"setting-up-jenkins/#prerequisite","text":"I have setup ubuntu 18.04 VM for installing Jenkins from Documentation . I have installed java 8 OpenJDK and JRE (Java Development Kit and Java Runtime Environment) which is used to develop and run the software, I have used this Link to download the same.","title":"Prerequisite"},{"location":"setting-up-jenkins/#installation-steps-for-jenkins","text":"Add the repository key to the terminal: `wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add - ` The system will return OK Next, add the Debian package repository address: sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > \\ /etc/apt/sources.list.d/jenkins.list sudo apt update Now install Jenkins and it\u2019s dependencies: sudo apt install jenkins","title":"Installation steps for Jenkins"},{"location":"setting-up-jenkins/#starting-jenkins","text":"The systemctl command is used to manage \"systemd\" services and service manager: sudo systemctl start jenkins Check the status of Jenkins service using the below command: sudo systemctl status jenkins If the Jenkins has installed successfully, then the output will show as Active: active(excited) . To reach it from a web browser I will adjust the firewall rules to complete the initial setup.","title":"Starting Jenkins"},{"location":"setting-up-jenkins/#set-up-a-firewall-with-ufw","text":"Firewall is a software controlling incoming and outgoing network traffic. Firewall is able to manage traffic by monitoring network ports. By default, Jenkins runs on port 8080. Opening using ufw(uncomplicated firewall): sudo ufw allow 8080 To check the status of the ufw: sudo ufw status If the status shows \"Inactive\". Then enable using following command To configure your server to allow incoming SSH connections, you can use this command: sudo ufw allow ssh To enable UFW, use this command: sudo ufw enable","title":"Set-up a Firewall with UFW"},{"location":"setting-up-jenkins/#setting-up-jenkins","text":"To find your server's name or domain name enter the following command in your terminal: ifconfig Using the server's name or domain name as shown in the following command, entered that into a browser which in turn gave the Unlock Jenkins window. http://your_server_name_or_domain:8080","title":"Setting up Jenkins"},{"location":"setting-up-jenkins/#using-that-server-name","text":"The Unlock Jenkins window shows where the admin password is stored. In the terminal I will use the cat command to display the password: sudo cat /var/lib/jenkins/secrets/initialAdminPassword The 32-character alphanumeric password is displayed in the terminal, paste it onto Administrator password field, and then click continue .","title":"Using that server name"},{"location":"setting-up-jenkins/#customize-jenkins","text":"In the Customize Jenkins select \"install suggested plugins\" which will start installation process directly and press continue .","title":"Customize Jenkins"},{"location":"setting-up-jenkins/#create-admin-user","text":"Add the required credentials, click on save and continue as admin. The \"Instance configuration\" page will be displayed which will ask to confirm the preferred URL for Jenkins instance, click on save and finish .","title":"Create Admin User"},{"location":"setting-up-jenkins/#installation-starts","text":"Once the process is over click on Reboot which will restart the Jenkins. Now, Jenkins is installed!","title":"Installation Starts"},{"location":"setting-up-mkdocs/","text":"Setting up MKDocs MkDocs is a fast, simple and static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. MkDocs will build your docs and use the ghp-import tool to commit them to the gh-pages branch and push the gh-pages branch to GitHub","title":"Setting up mkDocs"},{"location":"setting-up-mkdocs/#setting-up-mkdocs","text":"MkDocs is a fast, simple and static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. MkDocs will build your docs and use the ghp-import tool to commit them to the gh-pages branch and push the gh-pages branch to GitHub","title":"Setting up MKDocs"}]}